<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>JWT인증</title>
    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>JWT</h1>
    <div id="info"></div>

    <script>
      // 즉시 실행 함수 (함수)(매개변수전달);
      // 함수 선언과 동시에 실행
      (function () {
        console.log("즉시 실행 함수");
        console.log("즉시 실행 익명 함수");
      })();

      ((a) => {
        console.log("화살표 함수 선언");
        console.log(a);
      })(1);

      (function text(t) {
        console.log(t);
      })("안녕하세요!!");

      /*
      왜 사용하나요?
      1. 전역변수 사용을 피하기 위해서 사용
       (전역 변수는 다른 코드에 영향을 미칠 수 있어 피하는게 좋습니다.)
      2. 라이브러리 내의 전역변수 충돌을 피할 수 있음
      */

      (async function () {
        const info = document.getElementById("info");
        const token = localStorage.getItem("login");

        console.log(info);
        console.log(token);

        let data = "";
        if (!token) {
          // 로그인필요 로컬 스토리지에 토큰이 없는 상태
          data = `<a href="/login">로그인</a>`;
        } else {
          // 로그인 상태, 로컬 스토리지에 토큰이 있는 상태
          // 유효한 사용자인지 검증필요(서버에서)
          const response = await axios({
            method: "post",
            url: "/token",
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          console.log(response.data);
          //result: false, message
          //result: true, name
          if (response.data.result) {
            //인증된 유저
            data = `
            <p>${response.data.name}님 환영합니다</p>
            <button type="button" onclick="logout()">로그아웃</button>
            `;
          }
        }
        info.innerHTML = data;
      })();

      function logout() {
        //로컬 스토리지에서 jwt정보 삭제
        localStorage.clear();
        //새로고침으로 뷰화면 변경
        document.location.reload();
      }
    </script>
  </body>
</html>
