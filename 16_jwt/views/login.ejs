<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login Page</title>
    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <form name="loginForm">
      <input type="text" id="id" placeholder="아이디를 입력해주세요" />
      <br />
      <input type="password" id="pw" placeholder="비밀번호를 입력해주세요" />
      <br />
      <button type="button" onclick="login()">LOGIN</button>
    </form>

    <script>
      async function login() {
        const form = document.forms["loginForm"];
        // POST /login
        const response = await axios({
          url: "/login",
          method: "post",
          data: {
            id: form.id.value,
            pw: form.pw.value,
          },
        });
        console.log(response.data);
        // {result, token} 로그인 성공 true, token정보
        // {result, message} 로그인 실패 false, 메시지
        const { result, token, message } = response.data;
        //성공 or 실패에 따라 undefined(메시지 or 토큰)으로 오는 데이터가 있을 것
        if (result) {
          // 성공
          // 토큰을 저장하는 작업 >> localstorage에
          /*
          -- localstorage
          - 브라우저 내에 영구적으로 {키:값} 쌍으로 데이터 제작
          - 쿠키와 비슷하게 클라이언트에 저장소가 있음, 문자형 데이터 타입만 저장 가능
          - 5KB 데이터 저장가능(쿠키는 4KB)
          1. 로컬 스토리지에 데이터 저장
          localStorage.setItem("키이름1", data1); {키이름1:data1}
          localStorage.setItem("키이름2", data2); {키이름1:data1, 키이름2:data2}
          localStorage.setItem("키이름3", data3); {키이름1:data1, 키이름2:data2, 키이름3:data3}
          -> 하나의 배열에 여러 키, 값이 있는 형태로 저장된다
          2. 로컬 스토리지에서 데이터 가져오기
          localStorage.getItem("키이름2"); >> data2
          3. 로컬 스토리지에서 데이터 하나 지우기
          localStorage.removeItem("키이름2"); {키이름1: data1, 키이름3: data3}
          4. 로컬 스토리지 전체 데이터 삭제
          localStorage.clear(); {}
          */

          // 토큰 정보 로컬 스토리지에 저장
          localStorage.setItem("login", token);
          document.location.href = "/";
        } else {
          // 실패
          alert(message);
          // document.location.reload(); //form비워주기 위해 새로고침하는 중
          form.reset();
        }
      }
    </script>
  </body>
</html>
