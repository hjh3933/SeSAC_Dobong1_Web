<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>채팅방입니다</title>
    <script src="/socket.io/socket.io.js"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
      }
      .container {
        padding-top: 30px;
      }
      #space {
        background-color: rgb(123, 192, 219);
        min-height: 800px;
        max-height: 800px;
        /* max-width: 400px;
        min-width: 400px; */
        padding: 20px;
        display: flex;
        flex-direction: column;
        position: relative;
        align-items: center;
        overflow-y: auto;
      }
      h2 {
        text-align: center;
        font-size: 16px;
        border-bottom: 3px solid rgba(255, 255, 255, 0.3);
        padding-bottom: 15px;
        width: 100%;
      }
      p {
        padding: 5px 10px;
        /* min-width: 30%; */
        max-height: 400px;
        border-radius: 10px;
        /* font-weight: 600; */
        margin: 10px 0;
        display: block;
        text-align: center;
        word-wrap: break-word;
      }
      .me {
        background-color: yellow;
        margin-left: auto;
        max-width: 60%;
      }
      .you {
        background-color: white;
        margin-right: auto;
        max-width: 60%;
      }
      .dm {
        /* dm css */
        background-color: #fff5;
      }
      #chat {
        width: 90%;
        display: flex;
        justify-content: center;
        padding: 0;
        bottom: 10px;
        position: absolute;
        margin: auto;
      }
      #message {
        width: 65%;
        height: 40px;
        /* line-height: 30px; */
        border-radius: 20px;
        border: none;
        padding: 0 10px;
      }
      #message:focus + button {
        background-color: #fef01b;
        font-weight: bold;
      }
      button {
        width: 20%;
        /* font-weight: bold; */
        border: none;
        margin-left: 10px;
        border-radius: 5px;
      }
      button:hover {
        background-color: #fef01b;
        font-weight: bold;
      }
      .textDiv {
        width: 100%;
        display: flex;
        flex-direction: column;
      }
      .users {
        background-color: rgba(255, 255, 255, 0.3);
        border-radius: 20px;
      }
      #dm-select {
        width: 20%;
        border: none;
        outline: none;
        text-align: center;
        border-radius: 5px;
        margin-right: 10px;
      }
    </style>
  </head>
  <body>
    <!-- <div class="entry-box">
      <input type="text" id="nickname" />
      <button onclick="join()">채팅방 입장하기</button>
    </div> -->
    <div class="container d-none">
      <!-- 채팅내용 -->
      <div id="space">
        <!-- ~~가 입장했습니다. -->
        <form id="chat">
          <select id="dm-select">
            <!-- <option value="all">전체</option> -->
          </select>
          <input type="text" placeholder="메세지 입력" id="message" />
          <button>SEND</button>
        </form>
      </div>
    </div>

    <script>
      const socket = io();
      const users = document.querySelector("#users");
      const space = document.querySelector("#space");
      const container = document.querySelector(".container");
      const chatForm = document.querySelector("#chat");
      const select = document.querySelector("select");
      const chattingRoom = prompt("채팅방 이름을 입력해주세요");
      const myName = prompt("닉네임을 입력해주세요");
      let myNick;

      const h2 = document.createElement("h2");
      h2.innerText = `채팅방 ${chattingRoom} ☎️`;
      space.prepend(h2);

      // 1. 클라이언트에서 서버에게, 방이름 전달
      socket.emit("join", chattingRoom, myName);

      socket.on("error", (errorMsg) => {
        alert(errorMsg);
      });
      socket.on("entrySuccess", (myNick) => {
        myNick = myNick;
        container.classList.remove("d-none");
      });
      socket.on("updateNicks", (nickInfo) => {
        let options = `<option value="all">전체</option>`;
        //배열 for문 for in
        for (let key in nickInfo) {
          // console.log("for in >>", key);
          // console.log(nickInfo[key]); //대괄호 표기법으로 value뽑아내기
          if (key === socket.id) {
            continue;
          }
          let option = `<option value=${key}>${nickInfo[key]}</option>`;
          options += option;
        }
        // console.log(options);
        select.innerHTML = options;
      });

      // 4. 입장메시지 띄우기
      socket.on("userjoin", (notice) => {
        const p = document.createElement("p");
        // console.log(notice);
        p.classList.add("users");
        p.textContent = notice;
        space.append(p);
        // 2초후 입장 문구 없애기
        // setTimeout(() => {
        //   p.remove();
        // }, 2000);
      });

      //5. 서버에 메시지 보내기
      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();
        const input = chatForm.querySelector("#message");
        const message = input.value;
        const sendData = {
          myName,
          dm: select.value,
          msg: message,
        };
        if (message.trim() != "") socket.emit("message", sendData, (res) => {});

        input.value = "";
      });

      //7. 메시지 받아서 띄우기
      socket.on("message_toAll", (message, id, nickname, isDm) => {
        //id를 socket.id와 비교
        const textDiv = document.createElement("div");
        const p = document.createElement("p");
        const name = document.createElement("span");
        // p.textContent = `${id}: ${message}`;
        textDiv.classList.add("textDiv");
        space.append(textDiv);
        name.textContent = nickname;

        if (isDm) {
          //dm
          p.textContent = "[귓속말] " + message;
          if (id === socket.id) {
            p.classList.add("me", "dm");
          } else {
            p.classList.add("you", "dm");
            textDiv.append(name);
          }
        } else {
          //전체보내기
          p.textContent = message;
          if (id === socket.id) {
            //나는 노란색
            p.classList.add("me");
          } else {
            p.classList.add("you");
            textDiv.append(name);
          }
        }

        textDiv.append(p);
      });
    </script>
  </body>
</html>
